// <auto-generated />
using System;
using CropDealProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CropDealProject.Migrations
{
    [DbContext(typeof(CropDealDataBaseContext))]
    [Migration("20230307022137_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CropDealProject.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AdminID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminPassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AdminUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("AdminId");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("CropDealProject.Models.Crop", b =>
                {
                    b.Property<int>("CropId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CropID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CropName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CropId");

                    b.ToTable("Crop");
                });

            modelBuilder.Entity("CropDealProject.Models.CropOnSale", b =>
                {
                    b.Property<int>("CropSaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CropSaleID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CropId")
                        .HasColumnType("int")
                        .HasColumnName("CropID");

                    b.Property<string>("CropName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("CropPrice")
                        .HasColumnType("float");

                    b.Property<int>("CropQty")
                        .HasColumnType("int");

                    b.Property<string>("CropType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("FarmerId")
                        .HasColumnType("int")
                        .HasColumnName("FarmerID");

                    b.HasKey("CropSaleId")
                        .HasName("PK__CropOnSa__DA8EB9AF0354DD7A");

                    b.HasIndex("CropId");

                    b.HasIndex("FarmerId");

                    b.ToTable("CropOnSale");
                });

            modelBuilder.Entity("CropDealProject.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("InvoiceID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CropName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CropQty")
                        .HasColumnType("int");

                    b.Property<int>("CropSaleId")
                        .HasColumnType("int")
                        .HasColumnName("CropSaleID");

                    b.Property<string>("CropType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("date");

                    b.Property<double>("OrderTotal")
                        .HasColumnType("float");

                    b.Property<string>("Review")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userID");

                    b.HasKey("InvoiceId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("CropDealProject.Models.UserProfile", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("UserAccNo")
                        .HasColumnType("bigint");

                    b.Property<string>("UserAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UserBankName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserIfsc")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("UserIFSC");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserPhoneNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("UserStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("('Active')");

                    b.Property<string>("UserType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__UserProf__1788CCAC3B13F0B3");

                    b.HasIndex(new[] { "UserAccNo" }, "UQ__UserProf__01507BF2C9C34348")
                        .IsUnique();

                    b.HasIndex(new[] { "UserPhoneNo" }, "UQ__UserProf__687B5AF54D77F64F")
                        .IsUnique();

                    b.HasIndex(new[] { "UserIfsc" }, "UQ__UserProf__9EB2242E612265E6")
                        .IsUnique();

                    b.ToTable("UserProfile");
                });

            modelBuilder.Entity("CropDealProject.Models.CropOnSale", b =>
                {
                    b.HasOne("CropDealProject.Models.Crop", "Crop")
                        .WithMany("CropOnSales")
                        .HasForeignKey("CropId")
                        .HasConstraintName("fk_CropID");

                    b.HasOne("CropDealProject.Models.UserProfile", "Farmer")
                        .WithMany("CropOnSales")
                        .HasForeignKey("FarmerId")
                        .HasConstraintName("fk_FarmerID");

                    b.Navigation("Crop");

                    b.Navigation("Farmer");
                });

            modelBuilder.Entity("CropDealProject.Models.Crop", b =>
                {
                    b.Navigation("CropOnSales");
                });

            modelBuilder.Entity("CropDealProject.Models.UserProfile", b =>
                {
                    b.Navigation("CropOnSales");
                });
#pragma warning restore 612, 618
        }
    }
}
